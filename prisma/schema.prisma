generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  fullname  String
  username  String      @unique
  email     String      @unique
  password  String
  createAt  DateTime    @default(now())
  updateAt  DateTime    @updatedAt
  ProxyList ProxyList[]
  Proxy     Proxy[]
}

model ProxyList {
  key           String   @id @default(uuid())
  rotatingIndex Int      @default(0)
  name          String
  username      String   @unique
  password      String
  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
  userId        String
  checking      Boolean  @default(false)
  author        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Proxies       Proxy[]
}

enum ProxyStatus {
  ACTIVE
  INACTIVE
  CHECKING
}

model Proxy {
  id           Int         @id @default(autoincrement())
  host         String
  port         Int
  country      String?
  totalHits    Int         @default(0)
  createAt     DateTime    @default(now())
  updateAt     DateTime    @updatedAt
  username     String?
  password     String?
  status       ProxyStatus @default(CHECKING)
  lastCheckAt  DateTime    @default(now())
  proxyListKey String
  proxyList    ProxyList   @relation(fields: [proxyListKey], references: [key], onDelete: Cascade)
  author       User        @relation(fields: [userId], references: [id])
  userId       String
}
